/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Hospital.PharmacyManager;

import Business.Drug;
import Business.Enterprises.Enterprise;
import Business.Enterprises.Hospital;
import Business.Inventory;
import Business.InventoryItem;
import Business.MedicinePackage;
import Business.Network.Network;
import Business.Order;
import Business.OrderItem;
import Business.Organizations.Organization;
import Business.Patient;
import Business.Transaction;
import Business.UserAccount;
import Business.VisitRecord;
import Business.WorkRequest.PrescribeDrugsWorkRequest;
import Business.WorkRequest.ShortageDrugsWorkRequest;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mayank
 */
public class ViewDetailsJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Hospital selectedEnterprise;
    UserAccount userAccount;
    Network selectedNetwork;
    PrescribeDrugsWorkRequest request;
    ViewWorkQueueJPanel viewWorkQueueJPanel;
    ArrayList<Drug> tempDrugList;

    /**
     * Creates new form BusinessAdminJPanel
     */
    public ViewDetailsJPanel(JPanel userProcessContainer, Enterprise selectedEnterprise, UserAccount userAccount, Network selectedNetwork, PrescribeDrugsWorkRequest request, ViewWorkQueueJPanel viewWorkQueueJPanel) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.selectedEnterprise = (Hospital) selectedEnterprise;
        this.userAccount = userAccount;
        this.selectedNetwork = selectedNetwork;
        this.request = request;
        this.viewWorkQueueJPanel = (ViewWorkQueueJPanel) viewWorkQueueJPanel;
        tempDrugList = new ArrayList<>();

        refreshOrder();

        enterpriseNameJLabel.setText(" --  " + selectedEnterprise.getEnterpriseName());
        networkNameJLabel.setText(selectedNetwork.getNetworkName());


        orderIDJLabel.setText(" --  " + request.getOrder().getOrderNumber());

        Organization o = selectedEnterprise.getMyOrganization(userAccount);
        organizationNameJLabel.setText(o.getOrganizationName());

    }

    private void refreshOrder() {

        int rowCount = orderJTable.getRowCount();

        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) orderJTable.getModel()).removeRow(i);
        }

        for (OrderItem oi : request.getOrder().getOrderItemList()) {

            Object[] row = new Object[4];
            row[0] = oi.getDrug().getDrugId();
            row[1] = oi;
            row[2] = oi.getQuantity();
            row[3] = oi.getQuantStatus();
            ((DefaultTableModel) orderJTable.getModel()).addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton2 = new javax.swing.JButton();
        businessNameJLabel = new javax.swing.JLabel();
        enterpriseNameJLabel = new javax.swing.JLabel();
        networkNameJLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        organizationNameJLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        titleJLabel = new javax.swing.JLabel();
        drugNameTitleJLabel = new javax.swing.JLabel();
        orderIDJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        approveOrderJButton = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();

        backJButton2.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        backJButton2.setText("Back");
        backJButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backJButton2.setPreferredSize(new java.awt.Dimension(80, 30));
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        businessNameJLabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        businessNameJLabel.setText("Drug Tracking System");

        enterpriseNameJLabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        enterpriseNameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        enterpriseNameJLabel.setMinimumSize(new java.awt.Dimension(170, 24));
        enterpriseNameJLabel.setPreferredSize(new java.awt.Dimension(170, 24));

        networkNameJLabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        networkNameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        networkNameJLabel.setMaximumSize(new java.awt.Dimension(195, 24));
        networkNameJLabel.setMinimumSize(new java.awt.Dimension(195, 24));
        networkNameJLabel.setPreferredSize(new java.awt.Dimension(195, 24));

        organizationNameJLabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        organizationNameJLabel.setMinimumSize(new java.awt.Dimension(170, 24));
        organizationNameJLabel.setPreferredSize(new java.awt.Dimension(190, 24));

        titleJLabel.setFont(new java.awt.Font("Times New Roman", 1, 26)); // NOI18N
        titleJLabel.setText("View Details");

        drugNameTitleJLabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        drugNameTitleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        drugNameTitleJLabel.setText("Order ID");
        drugNameTitleJLabel.setMinimumSize(new java.awt.Dimension(170, 24));
        drugNameTitleJLabel.setPreferredSize(new java.awt.Dimension(170, 24));

        orderIDJLabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        orderIDJLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        orderIDJLabel.setMinimumSize(new java.awt.Dimension(170, 24));
        orderIDJLabel.setPreferredSize(new java.awt.Dimension(170, 24));

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Drug ID", "Drug Name", "Quantity", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderJTable);

        backJButton.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        backJButton.setText("Back");
        backJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backJButton.setPreferredSize(new java.awt.Dimension(80, 30));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        approveOrderJButton.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        approveOrderJButton.setText("Approve Order");
        approveOrderJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        approveOrderJButton.setEnabled(false);
        approveOrderJButton.setPreferredSize(new java.awt.Dimension(80, 30));
        approveOrderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveOrderJButtonActionPerformed(evt);
            }
        });

        processJButton.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        processJButton.setText("Process Order");
        processJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        processJButton.setPreferredSize(new java.awt.Dimension(80, 30));
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(drugNameTitleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderIDJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(processJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(approveOrderJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(organizationNameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(businessNameJLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enterpriseNameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 291, Short.MAX_VALUE)
                                .addComponent(networkNameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(372, 372, 372)
                .addComponent(titleJLabel)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(businessNameJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(enterpriseNameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(networkNameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(organizationNameJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titleJLabel)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(orderIDJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(drugNameTitleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processJButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(approveOrderJButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(120, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void approveOrderJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveOrderJButtonActionPerformed
        // TODO add your handling code here:
        int count = 0;

        for (OrderItem oi : request.getOrder().getOrderItemList()) {
            if (oi.getQuantStatus().equals("Processed")) {
                count++;
            }
        }

        int size = request.getOrder().getOrderItemList().size();
        if (count == size) {

            int c = 0;

            ArrayList<InventoryItem> iilist = new ArrayList<>();
            Order o = request.getOrder();

            for (OrderItem oi : o.getOrderItemList()) {
                for (InventoryItem ii : selectedEnterprise.getInventory().getInventoryItemList()) {
                    if (ii.getDrug().equals(oi.getDrug())) {
                        ArrayList<MedicinePackage> tempMedList = new ArrayList<>();
                        for (MedicinePackage mp : ii.getMedicinePackageList()) {
                            tempMedList.add(mp);
                            c++;
                            if (c == oi.getQuantity()) {
                                break;
                            }
                        }

                        InventoryItem inventoryItem = new InventoryItem();
                        inventoryItem.setQuantity(oi.getQuantity());
                        inventoryItem.setDrug(ii.getDrug());
                        inventoryItem.setMedicinePackageList(tempMedList);
                        iilist.add(inventoryItem);

                        for (InventoryItem inv : selectedEnterprise.getInventory().getInventoryItemList()) {
                            if (inv.getDrug() == oi.getDrug()) {
                                int a = 0;
                                for (MedicinePackage m : tempMedList) {
                                    inv.getMedicinePackageList().remove(m);
                                    a++;
                                }
                                inv.setQuantity(inv.getQuantity() - a);
                            }
                        }
                    }
                }
            }



            SimpleDateFormat sdf = new SimpleDateFormat("MM dd yy HH:mm:ss");
            String currentDate = sdf.format(new Date());

            Patient patient = request.getPatient();
            VisitRecord vr = request.getVr();
            Inventory inventory = new Inventory();
            inventory.setInventoryItemList(iilist);
            vr.setInventory(inventory);
            patient.getPatientHistory().addVisitRecord(vr);

            for (InventoryItem i : vr.getInventory().getInventoryItemList()) {
                for (MedicinePackage mp : i.getMedicinePackageList()) {
                    mp.getTransactionHistory().setPatient(patient);
                }
            }

            request.setResolveDate(currentDate);
            request.setStatus(WorkRequest.Status.OrderApproved);

            viewWorkQueueJPanel.refreshWorkQueue();
            JOptionPane.showMessageDialog(null, "Order Approved And Medicines Given To Patient");
            userProcessContainer.remove(this);
            CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
            cardLayout.previous(userProcessContainer);

        } else {
            JOptionPane.showMessageDialog(null, "All Drugs Not Processed. Process All Drugs And Try Again");
        }
    }//GEN-LAST:event_approveOrderJButtonActionPerformed

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        // TODO add your handling code here:


        for (OrderItem oi : request.getOrder().getOrderItemList()) {
            for (InventoryItem ii : selectedEnterprise.getInventory().getInventoryItemList()) {
                if (ii.getDrug() == oi.getDrug()) {
                    if (oi.getQuantity() <= ii.getQuantity()) {
                        JOptionPane.showMessageDialog(null, "Medicine " + oi.getDrug().getDrugName() + " Available In Inventory");
                        int option = JOptionPane.showConfirmDialog(null, "Process Order?", "Order Processing", JOptionPane.YES_NO_OPTION);
                        if (option == JOptionPane.YES_OPTION) {
                            oi.setQuantStatus("Processed");
                            refreshOrder();
                        }
                    } else {

                        JOptionPane.showMessageDialog(null, "Medicine " + oi.getDrug().getDrugName() + " Not Available In Inventory. Added To Shortage Drugs List");
                        tempDrugList.add(oi.getDrug());
                        oi.setQuantStatus("Shortage");
                        refreshOrder();
                    }
                }
            }
        }

        int size = tempDrugList.size();
        if (size > 0) {
            ShortageDrugsWorkRequest req = (ShortageDrugsWorkRequest) selectedEnterprise.getHospitalInventoryManagementOrganization().getWorkQueue().newWorkRequest(WorkRequest.Type.ShortageDrugsWorkRequest);
            req.setDrugList(tempDrugList);
            SimpleDateFormat sdf = new SimpleDateFormat("MM dd yy HH:mm:ss");
            String currentDate = sdf.format(new Date());
            req.setRequestDate(currentDate);
            req.setSender(userAccount);
            req.setStatus(WorkRequest.Status.OrderProcessing);
            JOptionPane.showMessageDialog(null, "All Drugs Not Available. Cannot Process The Request");
        } else {
            JOptionPane.showMessageDialog(null, "All Drugs Available. Order Processing Complete");
            approveOrderJButton.setEnabled(true);
        }


    }//GEN-LAST:event_processJButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveOrderJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton backJButton2;
    private javax.swing.JLabel businessNameJLabel;
    private javax.swing.JLabel drugNameTitleJLabel;
    private javax.swing.JLabel enterpriseNameJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel networkNameJLabel;
    private javax.swing.JLabel orderIDJLabel;
    private javax.swing.JTable orderJTable;
    private javax.swing.JLabel organizationNameJLabel;
    private javax.swing.JButton processJButton;
    private javax.swing.JLabel titleJLabel;
    // End of variables declaration//GEN-END:variables
}
